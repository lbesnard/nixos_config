# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/061eaf02-6969-4df5-9caf-a28cd46538f3";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/ED0D-2647";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/mnt/brownfunk_pictures" = {
    device = "lbesnard@brownfunk.lan:/media/lbesnard/bfunk_12tb_1/pictures";
    fsType = "fuse.sshfs";
    options = [
      "identityfile=/etc/ssh/ssh_host_ed25519_key"
      # "identityfile=/home/lbesnard/.ssh/id_rsa"
      "idmap=user"
      "debug" # access via journalctl -u $(systemd-escape -p /mnt/brownfunk_pictures/).mount
      "noauto" # to not block system boot
      "_netdev"
      "x-systemd.automount" # mount on demand
      "x-systemd.requires=network-online.target"
      "x-systemd.after=network-online.target"
      "default_permissions"
      # SSH options
      "reconnect" # handle connection drops
      "ServerAliveInterval=15" # keep connections alive
      "x-systemd.automount" # < mount the filesystem automatically on first access
      "allow_other" # < don't restrict access to only the user which `mount`s it (because that's probably systemd who mounts it, not you)
      "user" # < allow manual `mount`ing, as ordinary user.
      "_netdev"
    ];
  };
  boot.supportedFilesystems."fuse.sshfs" = true;

  swapDevices = [
    { device = "/dev/disk/by-uuid/261cf7c9-ed0c-4861-ab7f-6a0333653e3e"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp114s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wwp0s20f0u2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
